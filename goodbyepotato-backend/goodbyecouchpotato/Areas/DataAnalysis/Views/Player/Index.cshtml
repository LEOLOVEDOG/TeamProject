@section Styles
{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
    <style>
        .tile_count {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }

        .tile_stats_count {
            min-width: 150px;
            flex: 1;
            margin: 10px;
            text-align: center;
            padding: 10px;
        }

        .card {
            background: transparent;
            border: none;
        }

        .card-body {
            background: transparent;
            border: none;
        }

        .form-control.datepicker {
            background-color: #fff; /* 设置背景色为白色 */
            border: 1px solid #ccc; /* 设置边框颜色（如果需要的话） */
            border-radius: 0.25rem; /* 可选：调整边框圆角 */
        }

        /* 去掉“到”文本的背景色和边框 */
        .input-group-text {
            background-color: transparent; /* 背景色透明 */
            border: none; /* 去掉边框 */
        }

        #chart_plot_01 {
            width: 100%; /* 自适应宽度 */
            height: 400px; /* 图表高度 */
            position: relative; /* 为容器提供绝对定位支持 */
            min-width: 300px; /* 设置最小宽度，以防止过小 */
        }


        td.col-8 {
            padding: 0; /* 去掉默认内边距，以确保图表能够正确居中 */
            text-align: center; /* 水平居中内容 */
        }

        #productPieChart {
            display: inline-block; /* 使 canvas 作为内联块元素，便于水平居中 */
            max-width: 100%; /* 确保图表在容器内不超出 */
            height: 320px; /* 设置固定高度 */
        }

        .x_panel {
            background-color: transparent;
        }

        #gaugeChart {
            width: 100%; /* 自適應寬度 */
            height: 325px; /* 設置高度 */
        }

        .gauge-title {
            font-size: 20px;
            margin-bottom: 10px;
        }

    </style>
}

<h1>數據分析</h1>
<hr />
<div class="container">
    <div class="center_col" role="main">
        <div class="row mt-4">
            <div class="col-md-6 offset-md-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title"><i class="fa-regular fa-calendar"></i> 選擇日期範圍</h5>
                        <div class="input-group mb-3">
                            <input type="text" id="startDate" class="form-control datepicker" placeholder="開始日期" readonly>
                            <span class="input-group-text">到</span>
                            <input type="text" id="endDate" class="form-control datepicker" placeholder="結束日期" readonly>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="tile_count" id="statsContainer">
                <div class="col-md-2 col-sm-4 tile_stats_count">
                    <span class="count_top fs-5"><i class="fa fa-user"></i> 角色總數</span>
                    <div class="count" id="totalCharacters">@ViewBag.TotalCharacters</div>
                </div>
                <div class="col-md-2 col-sm-4 tile_stats_count">
                    <span class="count_top fs-5"><i class="fa-solid fa-angles-up"></i> 平均等級</span>
                    <div class="count" id="averageLevel">@ViewBag.AverageLevel</div>
                </div>
                <div class="col-md-2 col-sm-4 tile_stats_count">
                    <span class="count_top fs-5"><i class="fa-solid fa-weight-scale"></i> 平均體重</span>
                    <div class="count" id="averageWeight">@ViewBag.AverageWeight</div>
                </div>
                <div class="col-md-2 col-sm-4 tile_stats_count">
                    <span class="count_top fs-5"><i class="fa-solid fa-ruler-horizontal"></i> 平均身高</span>
                    <div class="count" id="averageHeight">@ViewBag.AverageHeight</div>
                </div>
                <div class="col-md-2 col-sm-4 tile_stats_count">
                    <span class="count_top fs-5"><i class="fa fa-user"></i> 尚在居住人數</span>
                    <div class="count" id="livingCount">@ViewBag.LivingCount</div>
                </div>
                <div class="col-md-2 col-sm-4 tile_stats_count">
                    <span class="count_top fs-5"><i class="fa fa-user"></i> 搬離人數</span>
                    <div class="count" id="movedCount">@ViewBag.MovedCount</div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div id="chart_plot_01" class="demo-placeholder" style="height: 400px;"></div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-md-7">
                <div class="x_panel tile overflow_hidden">
                    <div class="x_title">
                        <h2>Top 5 熱銷商品</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <table class="table" style="width:100%">
                            <tr>
                                <td class="col-8">
                                    <canvas id="productPieChart" height="320" width="420"></canvas>
                                </td>
                                <td class="col-4">
                                    <table class="tile_info" id="productDetails">
                                        <!-- 產品詳細資訊將在這裡動態添加 -->
                                    </table>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-5">
                <div class="x_panel tile overflow_hidden">
                    <div class="x_title">
                        <h2>未搬離玩家平均環境值</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <table class="table" style="width:100%">
                            <div id="gaugeChart"></div>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.zh-TW.min.js"></script>
    <script src="~/lib/echarts.min.js"></script>
    <script src="~/lib/chart.js/chart.min.js"></script>
    <script>
        $(document).ready(function () {
            var originalStartDate;
            var originalEndDate;

            function setDefaultDates() {
                var today = new Date();
                var lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);
                $('#startDate').datepicker('setDate', lastMonth);
                $('#endDate').datepicker('setDate', today);

                // 存储初始日期
                originalStartDate = lastMonth;
                originalEndDate = today;
                updateStats();
            }

            $('.datepicker').datepicker({
                format: 'yyyy-mm-dd',
                language: 'zh-TW',
                autoclose: true
            });

            setDefaultDates();

            function animateNumber(element, endValue) {
                anime({
                    targets: element,
                    innerHTML: [0, endValue],
                    easing: 'easeInOutQuad',
                    duration: 1500,
                    round: 1,
                    update: function (anim) {
                        element.innerHTML = Math.round(anim.animations[0].currentValue);
                    }
                });
            }

            function updateStats() {
                var startDate = $('#startDate').val();
                var endDate = $('#endDate').val();

                $.ajax({
                    url: '/DataAnalysis/Player/GetStats',
                    type: 'GET',
                    data: { startDate: startDate, endDate: endDate },
                    success: function (data) {
                        console.log('從伺服器接收到的資料:', data);
                        // 檢查是否有資料，如果沒有則顯示零值
                        if (data && Object.keys(data).length > 0) {
                            animateNumber($('#totalCharacters')[0], data.totalCharacters || 0);
                            animateNumber($('#averageLevel')[0], (data.averageLevel || 0).toFixed(2));
                            animateNumber($('#averageWeight')[0], (data.averageWeight || 0).toFixed(1));
                            animateNumber($('#averageHeight')[0], (data.averageHeight || 0).toFixed(1));
                            animateNumber($('#livingCount')[0], data.livingCount || 0);
                            animateNumber($('#movedCount')[0], data.movedCount || 0);

                            if (data.chartData) {
                                renderChart(data.chartData);
                            } else {
                                console.log('chartData 不存在於伺服器回應中，顯示空圖表');
                                renderChart({ dates: [], totalCharacters: [], averageLevels: [], livingCounts: [], movedCount: [] });
                            }
                        } else {
                            // 如果沒有資料，顯示所有項目為零
                            animateNumber($('#totalCharacters')[0], 0);
                            animateNumber($('#averageLevel')[0], 0);
                            animateNumber($('#averageWeight')[0], 0);
                            animateNumber($('#averageHeight')[0], 0);
                            animateNumber($('#livingCount')[0], 0);
                            animateNumber($('#movedCount')[0], 0);
                            renderChart({ dates: [], totalCharacters: [], averageLevels: [], livingCounts: [], movedCount: [] });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('更新統計資訊時發生錯誤:', error);
                        // 錯誤時也顯示所有項目為零
                        animateNumber($('#totalCharacters')[0], 0);
                        animateNumber($('#averageLevel')[0], 0);
                        animateNumber($('#averageWeight')[0], 0);
                        animateNumber($('#averageHeight')[0], 0);
                        animateNumber($('#livingCount')[0], 0);
                        animateNumber($('#movedCount')[0], 0);
                        renderChart({ dates: [], totalCharacters: [], averageLevels: [], livingCounts: [], movedCount: [] });
                    }
                });
            }

            function renderChart(chartData) {
                console.log('renderChart 函數被調用');
                console.log('chartData:', chartData);

                var chartContainer = document.getElementById('chart_plot_01');
                console.log('圖表容器:', chartContainer);

                if (!chartContainer) {
                    console.error('找不到圖表容器元素');
                    return;
                }
                var chart = echarts.init(chartContainer);
                console.log('ECharts 實例已創建');

                var option = {
                    animation: true,  // 確保動畫啟用
                    animationDuration: 10000,
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross',
                            label: {
                                backgroundColor: '#6a7985'
                            }
                        }
                    },
                    legend: {
                        data: ['角色總數', '平均等級', '尚在居住人數', '搬離人數']
                    },
                    toolbox: {
                        feature: {
                            saveAsImage: {
                                title: '下載',
                                name: 'Potato數據分析折線圖'
                            }
                        }
                    },
                    grid: {
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: chartData.dates.length > 0 ? chartData.dates : ['無資料'],
                        axisLabel: {
                            formatter: function (value) {
                                return value === '無資料' ? value : new Date(value).toLocaleDateString('zh-TW', {
                                    month: 'short', day: 'numeric'
                                });
                            }
                        }
                    },
                    yAxis: {
                        type: 'value',
                        axisLabel: {
                            formatter: '{value}'
                        }
                    },
                    series: [
                        {
                            name: '角色總數',
                            type: 'line',
                            showSymbol: false,
                            data: chartData.totalCharacters.length > 0 ? chartData.totalCharacters : [0],
                            animationDelay: function (idx) {
                                return idx * 10;
                            }
                        },
                        {
                            name: '平均等級',
                            type: 'line',
                            showSymbol: false,
                            data: chartData.averageLevels.length > 0 ? chartData.averageLevels : [0],
                            animationDelay: function (idx) {
                                return idx * 10;
                            }
                        },
                        {
                            name: '尚在居住人數',
                            type: 'line',
                            showSymbol: false,
                            data: chartData.livingCounts.length > 0 ? chartData.livingCounts : [0],
                            animationDelay: function (idx) {
                                return idx * 10;
                            }
                        },
                        {
                            name: '搬離人數',
                            type: 'line',
                            showSymbol: false,
                            data: chartData.movedCount.length > 0 ? chartData.movedCount : [0],
                            animationDelay: function (idx) {
                                return idx * 10;
                            }
                        }
                    ]
                };

                // 添加 resize 事件监听器
                window.addEventListener('resize', function () {
                    chart.resize();
                });

                try {
                    chart.setOption(option);
                    console.log('圖表選項已設置');
                } catch (error) {
                    console.error('設置圖表選項時發生錯誤:', error);
                }
            }


            function loadProductData() {
                $.ajax({
                    url: '/DataAnalysis/Player/GetProductData',
                    type: 'GET',
                    success: function (data) {
                        console.log('從伺服器接收到的產品資料:', data);

                        // 渲染圓餅圖
                        renderPieChart(data.pieChartData);

                        // 更新產品詳細資訊
                        var detailsHtml = '';
                        data.pieChartData.forEach(function (item) {
                            detailsHtml += '<tr><td><p><i class="fa fa-square" style="color:' + item.color + '"></i>' + item.name + '</p></td><td>' + item.percentage + '%</td></tr>';
                        });
                        $('#productDetails').html(detailsHtml);
                    },
                    error: function (xhr, status, error) {
                        console.error('載入產品資料時發生錯誤:', error);
                        alert('載入產品資料時發生錯誤');
                    }
                });
            }

            function renderPieChart(chartData) {
                var chartDom = document.getElementById('productPieChart');
                var myChart = echarts.init(chartDom);
                var option = {
                    tooltip: {
                        trigger: 'item',
                        formatter: '{a} <br/>{b}: {c} ({d}%)'
                    },
                    legend: {
                        orient: 'vertical',
                        left: 0,
                        data: chartData.map(item => item.name)
                    },
                    series: [
                        {
                            name: '產品使用情況',
                            type: 'pie',
                            radius: ['50%', '70%'],
                            avoidLabelOverlap: false,
                            label: {
                                show: false,
                                position: 'center'
                            },
                            color: ['#D1DDDB', '#85B8C8', '#1D6A96', '#034B61', '#283B42'],
                            emphasis: {
                                label: {
                                    show: true,
                                    fontSize: '18',
                                    fontWeight: 'bold'
                                }
                            },
                            labelLine: {
                                show: false
                            },
                            data: chartData
                        }
                    ]
                };

                myChart.setOption(option);
            }

            // 初始加載產品數據
            loadProductData();
            updateStats();

            // 監控日期變化事件
            $('.datepicker').datepicker({
                format: 'yyyy-mm-dd',
                language: 'zh-TW',
                autoclose: true,
                todayHighlight: true
            }).on('changeDate', function (e) {
                var selectedDate = $(this).datepicker('getDate');

                if (this.id === 'startDate') {
                    $('#endDate').datepicker('setStartDate', selectedDate);  // 设定结束日期不能早于开始日期
                } else if (this.id === 'endDate') {
                    $('#startDate').datepicker('setEndDate', selectedDate);  // 设定开始日期不能晚于结束日期
                }

                updateStats();  // 更新统计数据
            });



            // 監控搜尋按鈕點擊事件
            $('#searchBtn').on('click', function () {
                var startDate = $('#startDate').val();
                var endDate = $('#endDate').val();

                if (!startDate || !endDate) {
                    alert('請選擇開始日期和結束日期。');
                    return;
                }

                updateStats();
            });


            var averageEnvironment = @Html.Raw(ViewBag.AverageEnvironment);

            function renderGaugeChart(averageEnvironment) {
                var chartDom = document.getElementById('gaugeChart');
                var myChart = echarts.init(chartDom);
                var option = {
                    series: [
                        {
                            type: 'gauge',
                            startAngle: 180,
                            endAngle: 0,
                            center: ['50%', '95%'],
                            radius: '120%',
                            min: 0,
                            max: 1,
                            splitNumber: 8,
                            axisLine: {
                                lineStyle: {
                                    width: 6,
                                    color: [
                                        [0.25, '#FF6E76'],
                                        [0.5, '#FDDD60'],
                                        [0.75, '#58D9F9'],
                                        [1, '#7CFFB2']
                                    ]
                                }
                            },
                            pointer: {
                                icon: 'path://M12.8,0.7l12,40.1H0.7L12.8,0.7z',
                                length: '50%',
                                width: 5,
                                offsetCenter: [0, '-80%'],
                                itemStyle: {
                                    color: 'auto'
                                }
                            },
                            axisTick: {
                                length: 12,
                                lineStyle: {
                                    color: 'auto',
                                    width: 2
                                }
                            },
                            splitLine: {
                                length: 20,
                                lineStyle: {
                                    color: 'auto',
                                    width: 5
                                }
                            },
                            axisLabel: {
                                color: '#464646',
                                fontSize: 20,
                                distance: -75,
                                rotate: 'tangential',
                                formatter: function (value) {
                                    if (value === 0.875) {
                                        return '超棒';
                                    } else if (value === 0.625) {
                                        return '棒';
                                    } else if (value === 0.375) {
                                        return '不好';
                                    } else if (value === 0.125) {
                                        return '危險';
                                    }
                                    return '';
                                }
                            },
                            title: {
                                offsetCenter: [0, '-10%'],
                                fontSize: 20
                            },
                            detail: {
                                fontSize: 30,  // 調整字體大小
                                offsetCenter: [0, '-60%'],  // 調整顯示位置
                                valueAnimation: true,
                                formatter: function (value) {
                                    return (value * 100).toFixed(0) + '%';  // 顯示百分比
                                },
                                color: '#FDDD60'  // 設置顯示顏色，確保字體可見
                            },
                            data: [
                                {
                                    value: averageEnvironment
                                }
                            ]
                        }
                    ]
                };

                option && myChart.setOption(option);
                window.addEventListener('resize', function () {
                    myChart.resize();
                });
            }

            // 初始加載等級儀表盤
            renderGaugeChart(averageEnvironment);
        });


    </script>
}